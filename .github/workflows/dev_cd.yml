name: Continuous Deployment Development
  
on:
  pull_request:
      branches: ["dev"]
  push:
      branches: ["dev"]

env:
  PROJECT_ID: '${{secrets._PROJECT_ID}}'
  GAR_LOCATION: '${{secrets._GAR_LOCATION}}'
  SERVICE: '${{secrets._DEV_SERVICE}}'
  REGION: '${{secrets._REGION}}'

jobs:
  on-success:
    permissions:
      contents: 'read'
      id-token: 'write'
      
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up port
        run: echo "_PORT=${{ secrets._PORT }}" >> $GITHUB_ENV

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets._WIF_PROVIDER_DEV }}'
          service_account: '${{ secrets._WIF_SERVICE_ACCOUNT_DEV }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Gcloud Configuration
        run: gcloud config get project

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}" .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"
          flags: '--allow-unauthenticated'
          env_vars: |
            _PORT=${{ secrets._PORT }}
            _MONGO_URI=${{ secrets._DEV_MONGO_URI }}
            _SESSION_SECRET=${{secrets._SESSION_SECRET}}
            _CLOUDINARY_API_KEY=${{secrets._CLOUDINARY_API_KEY}}
            _CLOUDINARY_API_SECRET=${{secrets._CLOUDINARY_API_SECRET}}
            _CLOUDINARY_CLOUD_NAME=${{secrets._CLOUDINARY_CLOUD_NAME}}
            _TOKEN_SECRET=${{secrets._TOKEN_SECRET}}
            _SMTP_HOST= ${{secrets._SMTP_HOST}}
            _SMTP_PORT= ${{secrets._SMTP_PORT}}
            _SMTP_USE_TLS= ${{secrets._SMTP_USE_TLS}}
            _SMTP_HOST_USER= ${{secrets._SMTP_HOST_USER}}
            _SMTP_HOST_PASSWORD= ${{secrets._SMTP_HOST_PASSWORD}}
            _SMTP_SENDER_EMAIL= ${{secrets._SMTP_SENDER_EMAIL}}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}